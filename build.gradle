plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core'
    implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:7.0.1'
    implementation 'com.graphql-java-kickstart:graphql-java-tools:6.0.2'
    implementation 'com.graphql-java:graphql-java-extended-scalars:1.0'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation 'com.github.springtestdbunit:spring-test-dbunit:1.3.0'
    testImplementation 'org.dbunit:dbunit:2.6.0'
    testImplementation 'com.github.database-rider:rider-core:1.10.0'
    testImplementation 'com.github.database-rider:rider-junit5:1.10.0'
    testImplementation 'com.graphql-java-kickstart:graphql-spring-boot-starter-test:7.0.1'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.3.1.RELEASE'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}
